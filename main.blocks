<xml xmlns="https://developers.google.com/blockly/xml"><block type="pxt-on-start" id="F{,E@LoP*$fo:WNi?i!=" x="0" y="0"><statement name="HANDLER"><block type="typescript_statement" id="D+J]KNCgs8]B7zLj64`w" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="namespace castles {" line1="    function drawRectangle(length: number, width: number, blockType: number) {" line2="        for (let index = 0; index &lt; 2; index++) {" line3="            builder.mark()" line4="            builder.move(FORWARD, length - 1)" line5="            builder.tracePath(blockType)" line6="            builder.turn(LEFT_TURN)" line7="            builder.mark()" line8="            builder.move(FORWARD, width - 1)" line9="            builder.tracePath(blockType)" line10="            builder.turn(LEFT_TURN)" line11="        }" line12="    }" line13="" line14="    function drawAlternatingRectangle(length: number, width: number, blockType: number) {" line15="        function drawAlternatingLine(l: number, placeAtStart: boolean) {" line16="            let putBlock = placeAtStart;" line17="            for (let index2 = 0; index2 &lt; l - 1; index2++) {" line18="                builder.move(FORWARD, 1)" line19="                if (putBlock) {" line20="                    builder.place(blockType)" line21="                }" line22="                putBlock = !(putBlock)" line23="            }" line24="            return putBlock" line25="        }" line26="" line27="        builder.place(blockType)" line28="        for (let index3 = 0; index3 &lt; 2; index3++) {" line29="            let putBlock2 = drawAlternatingLine(length, false)" line30="            builder.turn(LEFT_TURN)" line31="            drawAlternatingLine(width, putBlock2)" line32="            builder.turn(LEFT_TURN)" line33="        }" line34="    }" line35="" line36="    //% block" line37="    export function buildCastleWall() {" line38="        let BlocType = COBBLESTONE" line39="        let WallWidth = 3" line40="        let WallLenght = 13" line41="        let WallHeight = 6" line42="        builder.place(CYAN_STAINED_GLASS)" line43="        // builder.teleportTo(pos(0, 0, 0))" line44="        // builder is at the center of the tower - shift it to a corner" line45="        builder.shift(-Math.floor(WallWidth / 2), 0, -Math.floor(WallWidth / 2))" line46="        // build 2 walls from bottom to top (up to WallHeight)" line47="        for (let index4 = 0; index4 &lt; WallHeight - 1; index4++) {" line48="            drawRectangle(WallLenght, WallWidth, BlocType)" line49="            builder.move(UP, 1)" line50="        }" line51="        drawAlternatingRectangle(WallLenght, WallWidth, BlocType)" line52="        // mov builder to center on other wall's end   ( added -1 as hotfix :/ )" line53="        builder.shift(WallLenght - Math.floor(WallWidth / 2) - 1, 1 - WallHeight, Math.floor(WallWidth / 2))" line54="        // verify it's ok" line55="        builder.place(CYAN_WOOL)" line56="    }" line57="" line58="    //% block" line59="    export function buildCastleTower() {" line60="        let BlockType = 0" line61="        let WallWidth2 = 0" line62="        let WallLenght2 = 0" line63="        let WallHeight2 = 0" line64="        let alternate = false" line65="        let putBlock3 = false" line66="        let TowerSize = 0" line67="        let TowerHeight = 0" line68="" line69="        BlockType = COBBLESTONE" line70="        TowerSize = 5" line71="        TowerHeight = 8" line72="        // builder.teleportTo(pos(0, 0, 0))" line73="        // builder is at the center of the tower - shift it to a corner" line74="        builder.shift( - Math.floor(TowerSize / 2), 0, - Math.floor(TowerSize / 2))" line75="        // let posX = Math.sin(3.14159265*2)  // will need this for circular tower's base" line76="        // build 4 walls from bottom to top (up to TowerHeight)" line77="        for (let height2 = 0; height2 &lt;= TowerHeight; height2++) {" line78="            // add 4 walls" line79="            drawRectangle(TowerSize, TowerSize, BlockType);" line80="            builder.move(UP, 1)" line81="        }" line82="        // build the upper part, larger by 1" line83="        // shift in diagonal by 1 block" line84="        builder.shift(-1, 0, -1)" line85="        for (let height22 = 0; height22 &lt;= 2; height22++) {" line86="            // add 4 walls" line87="            drawRectangle(TowerSize + 2, TowerSize + 2, BlockType)" line88="            builder.move(UP, 1)" line89="        }" line90="        // mov builder back to center" line91="        builder.shift(Math.floor(TowerSize / 2) + 1, 0 - (TowerHeight + 4), Math.floor(TowerSize / 2) + 1)" line92="        // verify it's ok" line93="        builder.place(GLASS)" line94="    }" line95="}" numlines="96"></mutation></block></statement></block></xml>